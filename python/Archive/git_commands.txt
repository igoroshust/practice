--------------------------------------------------------------------
Чтобы добавить файл в версионный контроль, нужно сделать 2 операции:
1) git add %filename%
+git status
2) git commit -m "message"
+git status
+git log
3) git push
+git status
--------------------------------------------------------------------
sudo apt install git - установка гита.
ssh-keygen - генерация ssh-ключа для вставки в создаваемый репозиторий
cat %URL% - вывод содержимого URL в консоль
cd - команда для изменения рабочего каталога (change directory)
ls - просмотр каталога
mkdir - команда для создания новых каталогов (папок).

git clone <URL> // создание копии удалённого репозитория Git.
git clone <https_адрес_репозитория" -b <branchname> // клонирование ветки
git status // просмотр состояния репозитория
git add <FILENAME> // add помечает, что файл готов к добавлению в версионный контроль (индексация)
git add . // добавление всех файлов из репозитория
git commit -m "message" // создание коммита, -m "" содержит сообщение
git init // создание папки .git (невидимой). Папка нужна, чтобы можно было работать с гитом.
git checkout -b <branchname>// переключение на конкретную ветку
git checkout -b <название> <коммит> // создание ветки от конкретного коммита https://skrinshoter.ru/sNxVJHaYY49, https://skrinshoter.ru/sNxes40bUr2
git log - команда для просмотра журнала.
git config --global user.name "" // добавление имени пользователя
git config --global user.email "" // добавление электронной почты
git config --list // вывод списка изменений (выход через esc + wq)
git restore // отмена действий.
git restore --source <коммит, на состояние которого мы делаем откат (не текущий)> <имя файла, который меняем> // откатить из коммита файл
git restore --staged <file> // отмена индексации файла
git reset --hard // удаляет все изменения и возвращает к коммиту, на котором находимся в данный момент.
git push - команда отправки локальных изменений на удалённый репозиторий
git format-patch -l <имя файла.patch>// создание текстового файла для просмотра метаданных о коммитах (ID, сообщение, дата). (возможная сигнатура git format-patch -l <имя ветки-1> <имя ветки-2>)
git format-patch -l
git push <branchname> // пуш созданной ветки (возможны ошибки при пуше, тогда нужно пушить бещ названия ветки).
git diff <коммит-1> <коммит-2> <файл> // просмотр состояния изменений в файле
git push --force // форс говорит гиту: "я знаю, что я делаю, просто возьми и перепиши".
git push origin branch // пуш в конкретную ветку
git show <название коммита из git log> // просмотр коммитов
git pull // используется для извлечения и загрузки содержимого из удалённого репозитория и немедленного обновления локального репозитория этим содержимым.
git --version // версия гита.
git stash // "откладывание" (архивирование) изменений. stash - тайник
git stash save "" // сохранить изменения
git stash list // просмотр изменений
git stash apply stash@{0} // возвращение к изменениям

git commit -m "feat: ..." // feat означает, что реализован новый функционал
git commit -m "fix: ..." // fix означает, что были внесены доработки

